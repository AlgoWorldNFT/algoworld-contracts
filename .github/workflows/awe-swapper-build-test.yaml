name: AWE Swapper Build and Test validation

on: [pull_request, push]

jobs:
  build-backend:
    name: Build & test swapper stateless contract
    runs-on: ubuntu-latest
    env:
      COVERAGE_SINGLE: 60
      COVERAGE_TOTAL: 60

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9.9

    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2.1.4
      with:
          poetry-version: 1.1.6

    - name: Install python dependencies
      run: poetry install

    - uses: pre-commit/action@v2.0.3
      name: "Linters and formatters check"
      with:
        extra_args: --all-files --show-diff-on-failure

    - name: Clone algorand sanbox
      run: cd .. && git clone https://github.com/algorand/sandbox.git
      if: github.event_name == 'pull_request' || contains(github.event.head_commit.message, '[pytest]')

    - name: Run algorand sandbox
      shell: 'script -q -e -c "bash {0}"' # hacky hack to make TTY work
      run: cd ../sandbox && ./sandbox up dev
      if: github.event_name == 'pull_request' || contains(github.event.head_commit.message, '[pytest]')

    - name: Delay before testing
      run: sleep 60
      if: github.event_name == 'pull_request' || contains(github.event.head_commit.message, '[pytest]')

    - name: pytester-cov
      id: pytester-cov
      uses: alexanderdamiani/pytester-cov@v1.2.0
      if: github.event_name == 'pull_request' || contains(github.event.head_commit.message, '[pytest]')
      with:
        pytest-root-dir: '.'
        cov-omit-list: 'tests/*'
        cov-threshold-single: ${{ env.COVERAGE_SINGLE }}
        cov-threshold-total: ${{ env.COVERAGE_TOTAL }}

    - name: Run pytest
      run: poetry run pytest
      if: github.event_name == 'pull_request' || contains(github.event.head_commit.message, '[pytest]')
